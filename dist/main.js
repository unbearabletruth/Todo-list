(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),A=t.n(i)()(r());A.push([n.id,"* {\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper {\n    display: grid;\n    grid-template: 1fr 20fr / 1fr 5fr;\n    \n    border-color: black;\n    height: 100vh;\n}\n\n.header {\n    display: flex;\n    align-items: center;\n    padding: 15px;\n    grid-row: 1;\n    grid-column: 1 / 3;\n    background-color: #818cf8;\n    color: #404040;\n    font-size: 26px;\n    font-weight: bold;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n    z-index: 1;\n}\n\ndiv.sidebar {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    grid-row: 2 / 3;\n    grid-column: 1;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n}\n\n.projects {\n    padding-top: 50px;\n}\n\n\nbutton.addProject {\n    position: absolute;\n    right: 8px;\n    top: 8px;\n    width: 120px;\n    height: 30px;\n    background-color: #0ea5e9;\n    border-radius: 10px;\n    border: 0px;\n    font-weight: bold;\n    color: white;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n}\n\ndiv.cardformbutton {\n    display: flex;\n    justify-content: space-evenly;\n}\n\nbutton.cardformbutton {\n    width: 70px;\n    height: 30px;\n    background-color: #8b5cf6;\n    border-radius: 10px;\n    border: 0px;\n    font-weight: bold;\n    color: white;\n}\n\nform#projectForm {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin: 10px 0px;\n    padding: 0px 10px;\n    align-items: center;\n}\n\nbutton.cardformbutton:hover {\n    background-color: #7c3aed;\n    cursor: pointer;\n}\n\n.content {\n    position: relative;\n}\n\nbutton.addCard {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    width: 170px;\n    height: 60px;\n    background-color: #0ea5e9;\n    border-radius: 10px;\n    border: 0px;\n    font-size: 22px;\n    font-weight: bold;\n    color: white;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n}\n\nbutton#projectsubmitbutton {\n    width: 50px;\n    height: 25px;\n    background-color: #0e7490;\n    border-radius: 10px;\n    border: 0px;\n    font-weight: bold;\n    color: white;\n}\n\nbutton.addCard:hover,\nbutton.addProject:hover {\n    background-color: #0284c7;\n    cursor: pointer;\n}\n\n.todos {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 0.3fr));\n    gap: 100px;\n    padding: 100px;\n}\n\n.toDocard {\n    display: flex;\n    flex-direction: column;\n    background-color: #ddd6fe;\n    height: 300px;\n    padding: 25px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n    justify-content: space-between;\n    color: #404040;\n    font-size: 20px;\n}\n\nform#cardForm {\n    display: flex;\n    flex-direction: column;\n    background-color: #ddd6fe;\n    height: 300px;\n    padding: 15px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n    justify-content: space-evenly;\n}\n\ninput {\n    appearance: none;\n    background-color: #ede9fe;\n    border: 0px;\n    height: 27px;\n    border-radius: 10px;\n    padding: 0px 7px;\n    color: #404040;\n    font-size: 16px;\n}\n\ninput#projectinput {\n    height: 23px;\n    background-color: white;\n}\n\nselect {\n    background-color: #ede9fe;\n    border: 0px;\n    height: 25px;\n    border-radius: 10px;\n    padding: 0px 5px;\n    color: #404040;\n    font-size: 16px;\n\n}\n\nselect:focus {\n    outline: none;\n}\n\ntextarea {\n    padding: 5px;\n    appearance: none;\n    height: 100px;\n    border: 0px;\n    border-radius: 10px;\n    background-color: #ede9fe;\n    color: #404040;\n    font-size: 16px;\n}\n\ninput:focus {\n    outline: none;\n    background-color: white;\n}\n\ntextarea:focus {\n    outline: none;\n    background-color: white;\n}\n\ndiv.project {\n    background-color: #fafafa;\n    padding: 15px 0px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #404040;\n    font-size: 16px;\n    font-weight: bold;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n}\n\ndiv.project:hover {\n    background-color: #818cf8;\n    cursor: pointer;\n}\n\n::placeholder { \n    color: #404040;\n    opacity: 1; \n  }\n\np.currentproject {\n    position: absolute;\n    left: 20px;\n    top: 20px;\n    color: #404040;\n    font-weight: bold;\n}\n\nimg {\n    width: 15px;\n    height: auto;\n}\n\nimg:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n}\n\ndiv#cardIcons {\n    display: flex;\n    justify-content: end;\n    gap: 25px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["* {\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper {\n    display: grid;\n    grid-template: 1fr 20fr / 1fr 5fr;\n    \n    border-color: black;\n    height: 100vh;\n}\n\n.header {\n    display: flex;\n    align-items: center;\n    padding: 15px;\n    grid-row: 1;\n    grid-column: 1 / 3;\n    background-color: #818cf8;\n    color: #404040;\n    font-size: 26px;\n    font-weight: bold;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n    z-index: 1;\n}\n\ndiv.sidebar {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    grid-row: 2 / 3;\n    grid-column: 1;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n}\n\n.projects {\n    padding-top: 50px;\n}\n\n\nbutton.addProject {\n    position: absolute;\n    right: 8px;\n    top: 8px;\n    width: 120px;\n    height: 30px;\n    background-color: #0ea5e9;\n    border-radius: 10px;\n    border: 0px;\n    font-weight: bold;\n    color: white;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n}\n\ndiv.cardformbutton {\n    display: flex;\n    justify-content: space-evenly;\n}\n\nbutton.cardformbutton {\n    width: 70px;\n    height: 30px;\n    background-color: #8b5cf6;\n    border-radius: 10px;\n    border: 0px;\n    font-weight: bold;\n    color: white;\n}\n\nform#projectForm {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin: 10px 0px;\n    padding: 0px 10px;\n    align-items: center;\n}\n\nbutton.cardformbutton:hover {\n    background-color: #7c3aed;\n    cursor: pointer;\n}\n\n.content {\n    position: relative;\n}\n\nbutton.addCard {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    width: 170px;\n    height: 60px;\n    background-color: #0ea5e9;\n    border-radius: 10px;\n    border: 0px;\n    font-size: 22px;\n    font-weight: bold;\n    color: white;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n}\n\nbutton#projectsubmitbutton {\n    width: 50px;\n    height: 25px;\n    background-color: #0e7490;\n    border-radius: 10px;\n    border: 0px;\n    font-weight: bold;\n    color: white;\n}\n\nbutton.addCard:hover,\nbutton.addProject:hover {\n    background-color: #0284c7;\n    cursor: pointer;\n}\n\n.todos {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 0.3fr));\n    gap: 100px;\n    padding: 100px;\n}\n\n.toDocard {\n    display: flex;\n    flex-direction: column;\n    background-color: #ddd6fe;\n    height: 300px;\n    padding: 25px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n    justify-content: space-between;\n    color: #404040;\n    font-size: 20px;\n}\n\nform#cardForm {\n    display: flex;\n    flex-direction: column;\n    background-color: #ddd6fe;\n    height: 300px;\n    padding: 15px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n    justify-content: space-evenly;\n}\n\ninput {\n    appearance: none;\n    background-color: #ede9fe;\n    border: 0px;\n    height: 27px;\n    border-radius: 10px;\n    padding: 0px 7px;\n    color: #404040;\n    font-size: 16px;\n}\n\ninput#projectinput {\n    height: 23px;\n    background-color: white;\n}\n\nselect {\n    background-color: #ede9fe;\n    border: 0px;\n    height: 25px;\n    border-radius: 10px;\n    padding: 0px 5px;\n    color: #404040;\n    font-size: 16px;\n\n}\n\nselect:focus {\n    outline: none;\n}\n\ntextarea {\n    padding: 5px;\n    appearance: none;\n    height: 100px;\n    border: 0px;\n    border-radius: 10px;\n    background-color: #ede9fe;\n    color: #404040;\n    font-size: 16px;\n}\n\ninput:focus {\n    outline: none;\n    background-color: white;\n}\n\ntextarea:focus {\n    outline: none;\n    background-color: white;\n}\n\ndiv.project {\n    background-color: #fafafa;\n    padding: 15px 0px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #404040;\n    font-size: 16px;\n    font-weight: bold;\n    box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\n}\n\ndiv.project:hover {\n    background-color: #818cf8;\n    cursor: pointer;\n}\n\n::placeholder { \n    color: #404040;\n    opacity: 1; \n  }\n\np.currentproject {\n    position: absolute;\n    left: 20px;\n    top: 20px;\n    color: #404040;\n    font-weight: bold;\n}\n\nimg {\n    width: 15px;\n    height: auto;\n}\n\nimg:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n}\n\ndiv#cardIcons {\n    display: flex;\n    justify-content: end;\n    gap: 25px;\n}"],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(A[c]=!0)}for(var d=0;d<n.length;d++){var p=[].concat(n[d]);o&&A[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),e.push(p))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},A=[],a=0;a<n.length;a++){var c=n[a],d=o.base?c[0]+o.base:c[0],p=i[d]||0,s="".concat(d," ").concat(p);i[d]=p+1;var l=t(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var x=r(u,o);o.byIndex=a,e.splice(a,0,{identifier:s,updater:x,references:1})}A.push(s)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var c=o(n,r),d=0;d<i.length;d++){var p=t(i[d]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0;var o={};(()=>{t.d(o,{k:()=>L});var n=t(379),e=t.n(n),r=t(795),i=t.n(r),A=t(569),a=t.n(A),c=t(565),d=t.n(c),p=t(216),s=t.n(p),l=t(589),u=t.n(l),x=t(426),f={};f.styleTagTransform=u(),f.setAttributes=d(),f.insert=a().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=s(),e()(x.Z,f),x.Z&&x.Z.locals&&x.Z.locals;const C=t.p+"18d967047ce8e906d570.svg",h=t.p+"dfe98989709adc1e7221.svg";function b(){const n=document.createElement("input");return n.type="text",n.placeholder="Title",n.required=!0,n}function g(){const n=document.createElement("textarea");return n.placeholder="Description",n.id="descriptioninput",n}function m(){const n=document.createElement("input");return n.type="datetime-local",n.placeholder="Due date",n.pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}",n}function B(){const n=document.createElement("select"),e=document.createElement("option");return e.value="",e.text="Choose priority",n.appendChild(e),["Low","Medium","High"].forEach((e=>{const t=document.createElement("option");t.value=e,t.text=e,n.appendChild(t)})),n}function I(n){const e=document.createElement("button");return e.classList.add("cardformbutton"),e.innerText="Cancel",e.addEventListener("click",(e=>{e.preventDefault(),n.remove()})),e}const v=document.querySelector(".todos");function y(n,e){const t=document.createElement("div");t.id=n.uniqueID,t.classList.add("toDocard");const o=document.createElement("p");o.textContent=`Task: ${n.title}`;const r=document.createElement("p");r.textContent=`Description: ${n.description}`;const i=document.createElement("p");i.textContent=`Due: ${n.dueDate}`;const A=document.createElement("p");A.textContent=`Priority: ${n.priority}`,t.appendChild(o),t.appendChild(r),t.appendChild(i),t.appendChild(A),v.insertBefore(t,v.children[e]),function(n,e){"High"===e?n.style.backgroundColor="#fca5a5":"Medium"===e?n.style.backgroundColor="#fdba74":"Low"===e&&(n.style.backgroundColor="#fcd34d")}(t,n.priority);const a=document.createElement("div");a.id="cardIcons";const c=function(n,e){const t=document.createElement("img");return t.src=h,t.addEventListener("click",(()=>{console.log(n.uniqueID);const t=document.getElementById(n.uniqueID),o=Array.from(t.parentElement.children).indexOf(t);console.log(o),e.remove(),function(n,e){const t=b();console.log(e),t.value=n.title;const o=g();o.value=n.description;const r=m();r.value=n.dueDate;const i=B();i.value=n.priority;const A=function(n,e,t,o,r,i){const A=document.createElement("form");return A.id="cardForm",A.addEventListener("submit",(a=>{A.remove(),console.log(L),L.edit(n,e.value,t.value,o.value,r.value),L.showAllCards(),y(n,i),a.preventDefault()})),A}(n,t,o,r,i,e),a=document.createElement("div");a.classList.add("cardformbutton");const c=function(){const n=document.createElement("button");return n.classList.add("cardformbutton"),n.innerText="Change",n}(),d=I(A);A.appendChild(t),A.appendChild(o),A.appendChild(r),A.appendChild(i),a.appendChild(c),a.appendChild(d),A.appendChild(a),v.insertBefore(A,v.children[e])}(n,o)})),t}(n,t),d=function(n,e){const t=document.createElement("img");return t.src=C,t.addEventListener("click",(()=>{!function(n){L.remove(n)}(n),e.remove()})),t}(n,t);a.appendChild(c),a.appendChild(d),t.appendChild(a)}class w{constructor(n,e,t,o,r){this.title=n,this.description=e,this.dueDate=t,this.priority=o,this.uniqueID=r}}class E{constructor(n){this.toDoList=[],this.name=n}add(n){this.toDoList.push(n)}remove(n){console.log(n),this.toDoList=this.toDoList.filter((e=>e.uniqueID!==n.uniqueID)),console.log(this.toDoList)}edit(n,e,t,o,r){console.log(e);for(let i of this.toDoList)n.uniqueID===i.uniqueID&&(i.title=e,i.description=t,i.dueDate=o,i.priority=r)}showAllCards(){this.toDoList.forEach((n=>{console.log(n)}))}renderAllCards(){this.toDoList.forEach((n=>{y(n)}))}}const j=new class{constructor(n){this.projects=[]}add(n){this.projects.push(n)}showAllProjects(){this.projects.forEach((n=>{console.log(n)}))}},k=document.querySelector(".projects");function D(n){const e=document.querySelector(".currentproject");null!=e&&e.remove();const t=document.createElement("p");return t.classList.add("currentproject"),t.textContent=n.name,document.querySelector(".content").appendChild(t),t}function z(n){const e=document.createElement("div");e.classList.add("project"),e.textContent=n.name,k.appendChild(e),j.add(n),e.addEventListener("click",(()=>{const t=document.querySelector(".todos");for(;t.firstChild;)t.removeChild(t.firstChild);var o;D(n),o=e,document.querySelectorAll("div.project").forEach((n=>n.style.backgroundColor="#fafafa")),o.style.backgroundColor="#7dd3fc",console.log(n),n.renderAllCards(),L=n}))}document.querySelector("button.addCard").addEventListener("click",(()=>{const n=b(),e=g(),t=m(),o=B(),r=function(n,e,t,o){const r=document.createElement("form");return r.id="cardForm",r.addEventListener("submit",(i=>{r.remove();const A="id"+(new Date).getTime(),a=new w(n.value,e.value,t.value,o.value,A);console.log(L),L.add(a),L.showAllCards(),y(a),i.preventDefault()})),r}(n,e,t,o),i=document.createElement("div");i.classList.add("cardformbutton");const A=function(){const n=document.createElement("button");return n.classList.add("cardformbutton"),n.innerText="Add",n}(),a=I(r);r.appendChild(n),r.appendChild(e),r.appendChild(t),r.appendChild(o),i.appendChild(A),i.appendChild(a),r.appendChild(i),v.appendChild(r)}));const Y=new E("Daily Project");let L=Y;D(Y),z(Y),document.querySelector("button.addProject").addEventListener("click",(()=>{const n=function(){const n=document.createElement("input");return n.id="projectinput",n.type="text",n.placeholder="Project name",n.required=!0,n}(),e=function(){const n=document.createElement("button");return n.id="projectsubmitbutton",n.innerText="Add",n}(),t=function(n){const e=document.createElement("form");return e.id="projectForm",e.addEventListener("submit",(t=>{z(new E(n.value)),e.remove(),t.preventDefault()})),e}(n);t.appendChild(n),t.appendChild(e),k.appendChild(t)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,